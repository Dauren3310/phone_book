{"version":3,"sources":["reportWebVitals.js","store/actionTypes.js","store/reducers/reducer.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/CardsList/CardItem/CardItem.js","components/CardsList/CardsList.js","axios.js","store/actions/actions.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/ContactInfo/ContactInfo.js","containers/Home/Home.js","containers/Forms/AddContactForm.js","containers/Forms/EditContactForm.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","START_REQUEST","CREATE_CONTACT_SUCCESS","SET_CONTACTS","SHOW_MODAL","SET_CONTACT_INFO","initialState","contacts","loading","contactInfo","showModal","reducer","state","action","type","value","contact","NavigationItem","props","className","to","exact","children","NavigationItems","Toolbar","Layout","CardItem","showContactInfo","Card","style","cursor","onClick","Body","width","height","src","photo","alt","Text","name","CardsList","map","id","instance","axios","create","baseURL","startRequest","setShowModal","setContactInfo","setContacts","fetchContacts","dispatch","a","get","response","Object","keys","data","console","log","showContact","Backdrop","show","clicked","Modal","close","transform","opacity","Spinner","ContactInfo","deleteContact","goToEditForm","image","minHeight","href","phone","email","Button","variant","Home","useSelector","useDispatch","useEffect","delete","history","push","AddContactForm","useState","inputValues","setInputValues","changeInputHandler","e","target","prevState","Form","onSubmit","preventDefault","post","contactWithId","Group","Label","Control","onChange","required","size","placeholder","EditContactForm","match","params","contactWithoutId","put","App","path","component","render","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6b22cb6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const START_REQUEST = 'START_REQUEST';\nexport const CREATE_CONTACT_SUCCESS = 'CREATE_CONTACT_SUCCESS';\nexport const SET_CONTACTS = 'SET_CONTACTS';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const SET_CONTACT_INFO = 'SET_CONTACT_INFO';","import { START_REQUEST, SET_CONTACTS, CREATE_CONTACT_SUCCESS, SHOW_MODAL, SET_CONTACT_INFO } from \"../actionTypes\";\n\nconst initialState = {\n  contacts: [],\n  loading: false,\n  contactInfo: {},\n  showModal: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL: \n      return {...state, showModal: action.value};\n    case START_REQUEST: \n      return {...state, loading: true};\n    case SET_CONTACT_INFO:\n      return {...state, loading: false, contactInfo: action.contact};\n    case SET_CONTACTS:\n      return {...state, loading: false, contacts: action.contacts};\n    case CREATE_CONTACT_SUCCESS:\n      return {...state, loading: false, contacts: [...state.contacts, action.contact]};\n    default:\n      return state;    \n  }\n};\n\nexport default reducer;\n\n","import {NavLink} from \"react-router-dom\";\nimport \"./NavigationItem.css\";\n\nconst NavigationItem = props => {\n  return (\n    <li className=\"NavigationItem\">\n      <NavLink to={props.to} exact={props.exact}>\n        {props.children}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default NavigationItem;","import \"./NavigationItems.css\";\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst NavigationItems = () => {\n  return (\n    <ul className=\"NavigationItems\">\n      <NavigationItem to=\"/add-new-contact\">Add new contact</NavigationItem>\n    </ul>\n  );\n};\n\nexport default NavigationItems;","import \"./Toolbar.css\";\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport { NavLink } from \"react-router-dom\";\n\nconst Toolbar = () => {\n  return (\n    <header className=\"Toolbar\">\n      <div>\n        <NavLink to='/' exact className='Logo' >\n          Contacts\n        </NavLink>\n      </div>\n      <nav>\n        <NavigationItems/>\n      </nav>\n    </header>\n  );\n};\n\nexport default Toolbar;\n","import Toolbar from '../Navigation/Toolbar/Toolbar';\nimport \"./Layout.css\";\n\nconst Layout = (props) => {\n  return (\n    <>\n      <Toolbar />\n      <main className=\"Layout-Content\">\n        {props.children}\n      </main>\n      <footer className=\"footer\">Footer will be here</footer>\n    </>\n  );\n};\n\nexport default Layout;","import { Card } from \"react-bootstrap\";\n\nconst CardItem = ({contact, showContactInfo}) => {\n  return (\n    <Card \n      style={{cursor: 'pointer'}} \n      className='my-3' \n      onClick={showContactInfo}\n    >\n      <Card.Body className='d-flex align-items-center'>\n        <img \n          className='mr-3'\n          width={80}\n          height={80}\n          src={contact.photo} \n          alt=\"preview\"\n        />\n      <Card.Text>{contact.name}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CardItem;\n","import CardItem from \"./CardItem/CardItem\";\n\nconst CardsList = ({contacts, showContactInfo}) => {\n  return (\n    <div>\n      {\n        contacts.map(contact => {\n          return (\n            <CardItem \n              key={contact.id}\n              showContactInfo={() => showContactInfo(contact.id)}\n              contact={contact}\n            />\n          )\n        })\n      }   \n    </div>\n  );\n};\n\nexport default CardsList;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://training-64b34-default-rtdb.firebaseio.com/'\n});\n\nexport default instance;","import axios from '../../axios';\nimport { START_REQUEST, CREATE_CONTACT_SUCCESS, SET_CONTACTS, SHOW_MODAL, SET_CONTACT_INFO } from '../actionTypes';\n\nconst startRequest = () => {\n  return {type: START_REQUEST};\n};\n\nexport const setShowModal = value => {\n  return {type: SHOW_MODAL, value}\n}\n\nconst setContactInfo = (contact) => {\n  return {type: SET_CONTACT_INFO, contact}\n}\n\nconst setContacts = contacts => {\n  return {type: SET_CONTACTS, contacts};\n}\n\nexport const createContact = contact => {\n  return async dispatch => {\n    try {\n      dispatch(startRequest());\n      const response = await axios.post('contacts.json', contact);\n      const contactWithId = {...contact, id: response.data.name};\n      dispatch({type: CREATE_CONTACT_SUCCESS, contact: contactWithId});\n    } catch(e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const fetchContacts = () => {\n  return async dispatch => {\n    try {\n      dispatch(startRequest());\n      const response = await axios.get('contacts.json');\n      const contacts = Object.keys(response.data).map(id => ({...response.data[id], id}));\n      dispatch(setContacts(contacts));    \n    } catch(e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const showContact = id => {\n  return async dispatch => {\n    try {\n      dispatch(startRequest());\n      const response = await axios.get(`contacts/${id}.json`);\n      const contact = {...response.data, id}; \n      dispatch(setContactInfo(contact));    \n    } catch(e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const deleteContact = id => {\n  return async dispatch => {\n    try {\n      dispatch(startRequest());\n      await axios.delete(`contacts/${id}.json`);\n      dispatch(setShowModal(false));\n      dispatch(fetchContacts());\n    } catch(e) {\n      console.log(e);\n    }\n  }\n} \n\nexport const editContact = contact => {\n  return async dispatch => {\n    try {\n      dispatch(startRequest());\n      const contactWithoutId = {...contact};\n      delete contactWithoutId.id;\n      await axios.put(`contacts/${contact.id}.json`, contactWithoutId);\n      dispatch(fetchContacts());\n    } catch(e) {\n      console.log(e);\n    }\n  }\n}","import \"./Backdrop.css\";\n\nconst Backdrop = ({ show, clicked }) => {\n  return show ? <div onClick={clicked} className=\"Backdrop\" /> : null;\n};\n\nexport default Backdrop;","import \"./Modal.css\";\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = ({ children, show, close }) => {\n  return (\n    <>\n      <Backdrop show={show} clicked={close} />\n      <div\n        className=\"Modal\"\n        style={{\n          transform: `translateY(${show ? 0 : \"-200vh\"})`,\n          opacity: show ? 1 : 0\n        }}\n      >\n        <button onClick={close}>X</button>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;","import Backdrop from '../Backdrop/Backdrop';\nimport \"./Spinner.css\";\n\nconst Spinner = props => {\n  return (\n    <>\n      <Backdrop show={true} />\n      <div className=\"Spinner\"></div>\n    </>\n  );\n}\n\nexport default Spinner;","import { Button } from \"react-bootstrap\";\n\nconst ContactInfo = ({ contactInfo, deleteContact, goToEditForm}) => {\n\n  const image = (\n    <img\n      style={{ width: '100%' }} \n      src={contactInfo.photo} \n      alt=\"preview\" \n    />\n  );\n\n  return (\n    <div> \n      <div className='d-flex mt-1' >\n\n        <div style={{ width: 200, minHeight: 200 }}>\n            {contactInfo.photo ? image : null}\n        </div>\n\n        <div className='ml-2'>\n          <h3>{contactInfo.name}</h3>\n          <div>Phone: <a href={`tel:${contactInfo.phone}`}>{contactInfo.phone}</a></div>\n          <div>Email: <a href={`email:${contactInfo.email}`}>{contactInfo.email}</a></div>\n        </div>\n\n      </div>\n      \n      <div>\n        <Button\n          className='my-2 mr-2'\n          variant=\"warning\"\n          onClick={() => goToEditForm(contactInfo.id)}\n        >\n          Edit\n        </Button>\n        <Button\n          className='my-2 mr-2'\n          variant=\"danger\"\n          onClick={() => deleteContact(contactInfo.id)}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  )\n\n};\n\nexport default ContactInfo;\n","import { useEffect } from 'react';\nimport {  } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardsList from '../../components/CardsList/CardsList';\nimport { setShowModal, fetchContacts, showContact, deleteContact } from '../../store/actions/actions';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport ContactInfo from '../../components/ContactInfo/ContactInfo';\n\nconst Home = props => {\n\n  const contacts = useSelector(state => state.contacts);\n  const contactInfo = useSelector(state => state.contactInfo);\n  const loading = useSelector(state => state.loading);\n  const showModal = useSelector(state => state.showModal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const closeModalHandler = () => {\n   dispatch(setShowModal(false)); \n  }\n\n  const showContactInfoHandler = id => {\n    dispatch(setShowModal(true));\n    dispatch(showContact(id));\n  }\n\n  const deleteContactHandler = id => {\n    dispatch(deleteContact(id));\n  }\n\n  const goToEditForm = id => {\n    props.history.push(`/contacts/${id}/edit-contact`);\n    dispatch(setShowModal(false)); \n  }\n\n  return (\n    <div className='container'>\n      <Modal \n        show={showModal}\n        close={closeModalHandler}\n      >\n        <ContactInfo\n          contactInfo={contactInfo}\n          deleteContact={deleteContactHandler}\n          goToEditForm={goToEditForm}\n        />\n      </Modal>\n      {loading ? <Spinner /> : null} \n      <CardsList \n        contacts={contacts}\n        showContactInfo={showContactInfoHandler}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { createContact } from '../../store/actions/actions';\n\nconst AddContactForm = props => {\n\n  const [inputValues, setInputValues] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    photo: ''\n  });\n  \n  const loading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n\n  const changeInputHandler = e => {\n    const {name, value} = e.target;\n    setInputValues(prevState => ({...prevState, [name]: value}));\n  };\n\n  const createNewContact = e => {\n    e.preventDefault();\n    dispatch(createContact(inputValues));\n    props.history.push('/')\n  }\n\n  const backToContacts = () => props.history.push('/');\n\n\n  const image = (\n    <img\n      style={{ width: '100%' }} \n      src={inputValues.photo} \n      alt=\"preview\" \n    />\n  );\n\n  return (\n    <div className='container'>\n      {loading ? <Spinner /> : null} \n      <Form onSubmit={createNewContact}>\n        <h3>Add new contact</h3>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={inputValues.name}\n            onChange={changeInputHandler}\n            name='name'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Phone</Form.Label>\n          <Form.Control\n            value={inputValues.phone}\n            onChange={changeInputHandler}\n            name='phone'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter phone\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            value={inputValues.email}\n            onChange={changeInputHandler}\n            name='email'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Photo</Form.Label>\n          <Form.Control\n            value={inputValues.photo}\n            onChange={changeInputHandler}\n            name='photo'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter photo\"\n          />\n        </Form.Group>\n\n        <h5>Photo preview</h5>\n        <div style={{ width: 200, minHeight: 200 }}>\n          {inputValues.photo ? image : null}\n        </div>\n\n        <Button\n          className='my-2 mr-2'\n          type='submit' \n          variant=\"success\"\n        >\n          Save\n        </Button>\n        \n        <Button \n          className='my-2'\n          variant=\"danger\"\n          onClick={backToContacts}\n        >\n          Back to contacts\n        </Button>\n          \n      </Form>\n    </div>\n  );\n};\n\nexport default AddContactForm;","import { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { editContact, showContact } from '../../store/actions/actions';\n\nconst EditContactForm = props => {\n\n  const [inputValues, setInputValues] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    photo: ''\n  });\n  \n  const loading = useSelector(state => state.loading);\n  const contactInfo = useSelector(state => state.contactInfo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(showContact(props.match.params.id));\n    setInputValues({...contactInfo});\n  }, [dispatch, props.match.params.id]);\n\n  const changeInputHandler = e => {\n    const {name, value} = e.target;\n    setInputValues(prevState => ({...prevState, [name]: value}));\n  };\n\n  const editContactHandler = e => {\n    e.preventDefault();\n    dispatch(editContact(inputValues));\n    props.history.push('/');\n  }\n\n  const backToContacts = () => props.history.push('/');\n\n  const image = (\n    <img\n      style={{ width: '100%' }} \n      src={inputValues.photo} \n      alt=\"preview\" \n    />\n  );\n\n  return (\n    <div className='container'>\n      {loading ? <Spinner /> : null} \n      <Form onSubmit={editContactHandler}>\n        <h3>Edit contact</h3>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={inputValues.name}\n            onChange={changeInputHandler}\n            name='name'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Phone</Form.Label>\n          <Form.Control\n            value={inputValues.phone}\n            onChange={changeInputHandler}\n            name='phone'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter phone\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            value={inputValues.email}\n            onChange={changeInputHandler}\n            name='email'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter email\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Photo</Form.Label>\n          <Form.Control\n            value={inputValues.photo}\n            onChange={changeInputHandler}\n            name='photo'\n            required \n            size=\"sm\" \n            type=\"text\"  \n            placeholder=\"Enter photo\"\n          />\n        </Form.Group>\n\n        <h5>Photo preview</h5>\n        <div style={{ width: 200, minHeight: 200 }}>\n          {inputValues.photo ? image : null}\n        </div>\n\n        <Button\n          className='my-2 mr-2'\n          type='submit' \n          variant=\"success\"\n        >\n          Save\n        </Button>\n        \n        <Button \n          className='my-2'\n          variant=\"danger\"\n          onClick={backToContacts}\n        >\n          Back to contacts\n        </Button>\n          \n      </Form>\n    </div>\n  );\n};\n\nexport default EditContactForm;","import { Route, Switch } from 'react-router';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport Home from './containers/Home/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContactForm from './containers/Forms/AddContactForm';\nimport EditContactForm from './containers/Forms/EditContactForm';\n\nconst App = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={[\"/\", \"/phone_book\"]} exact component={Home} />\n        <Route path=\"/add-new-contact\" component={AddContactForm} />\n        <Route path=\"/contacts/:id/edit-contact\" component={EditContactForm} />\n        <Route render={() => {\n          return <h1>Page not found</h1>;\n        }} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/reducer';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}